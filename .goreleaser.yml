project_name: circonus-logwatch

before:
  hooks:
    - go mod tidy
    - cmd: golangci-lint run
      env:
        - GOOS=linux
    - govulncheck ./...

builds:
    -
        id: clw
        main: main.go
        binary: sbin/circonus-logwatchd
        env:
            - CGO_ENABLED=0
        goos:
            - linux
            - freebsd
        goarch:
            - amd64
        ignore:
            -
                goarch: 386
        flags:
          - -trimpath
        ldflags:
            - -s
            - -w
            - -extldflags "-static"
            - -X github.com/circonus-labs/circonus-logwatch/internal/release.VERSION={{.Version}}
            - -X github.com/circonus-labs/circonus-logwatch/internal/release.COMMIT={{.ShortCommit}}
            - -X github.com/circonus-labs/circonus-logwatch/internal/release.DATE={{.Date}}
            - -X github.com/circonus-labs/circonus-logwatch/internal/release.TAG={{.Tag}}


archives:
    - 
        id: default
        name_template: "{{.ProjectName}}_{{.Version}}_{{.Os}}_{{.Arch}}"
        format: tar.gz
        format_overrides:
            - goos: windows
              format: zip
        files:
            - LICENSE
            - README.md
            - CHANGELOG.md
            - service/*
            - etc/example-circonus-logwatch.yaml
            - etc/log.d/README.md

release:
    github:
        owner: circonus-labs
        name: circonus-logwatch

    prerelease: auto

changelog:
  use: git
  sort: desc
  abbrev: 0
  groups:
    - title: Features
      regexp: "^.*feat[(\\w)]*:+.*$"
      order: 0
    - title: 'Bug fixes'
      regexp: "^.*fix[(\\w)]*:+.*$"
      order: 1
    - title: 'Dependencies'
      regexp: "^.*build(deps):+.*$"
      order: 2
    - title: Others
      order: 999
  filters:
    exclude:
      - '^docs:'
      - typo

checksum:
    name_template: "{{.ProjectName}}_checksums.txt"

snapshot:
  name_template: '{{ incpatch .Version }}-devel'

sboms:
  - artifacts: archive
    args: ["$artifact", "--output", "cyclonedx-json@1.5=$document"]
    env:
      - SYFT_GOLANG_SEARCH_LOCAL_MOD_CACHE_LICENSES=true
      - SYFT_GOLANG_SEARCH_REMOTE_LICENSES=true

after:
  hooks:
    - cmd: bash -c 'for b in *.sbom; do grype -q --add-cpes-if-none $b; done'
      dir: ./dist